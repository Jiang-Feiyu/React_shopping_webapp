{\rtf1\ansi\ansicpg950\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset136 PingFangHK-Medium;\f1\fnil\fcharset136 PingFangHK-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww24720\viewh16380\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 Jiang Feiyu 3035770800 \
Assignment 2 README files\
\
Using router method, set:\

\fs26 <Route element=\{<Login/>\} path='/login'></Route>\
<Route element=\{this.home()\} path='/home'></Route>\
<Route element=\{<Detailed/>\} path='/detailed'></Route>\
<Route element=\{<Cart/>\} path='/cart'></Route>\
<Route element=\{<Finish/>\} path='/finish'></Route>\
<Route path='/' element=\{<Redirect to="/home"/>\}></Route>
\fs36 \
several routes, together with the import of the History and Redirect modules, provide back and page switching.\
Start program method:\
cd Shoppingapp and productService respectively, run npm install and npm start, and open http://localhost:3000/#/home.\
Using Prettierrc to format this file.\
\
Front-end composition:\
1. Class App\
	This is the total components, used to connect different routes, at the same time the getDataList and backend interface interaction, \ul http://localhost:3001/loadpage\ulnone  for product information.\
\
2. Class Back\
	Implement return function.\
\
3. Class Detailed\
	The handlerChange function is responsible for changing the number of goods.\
	AddToChar function is responsible for the goods is added to the shopping cart and corresponding interface at \ul http://localhost:3001/addtocart.\ulnone \
	The getData function is responsible for the display of goods, the corresponding interface at \ul http://localhost:3001/loadproduct/+ id.\
\
\ulnone 4, Class Login\
	The login function is used to determine whether the user name and password match with database, if the match is successful, redirect to the home page, or display an error, the corresponding interface at \ul http://localhost:3001/signin.\ulnone \
	The getUserInfo function is used to extract basic user information (including cookies) from the database, corresponding to the back-end \ul interface/getsessionInfo\ulnone .\
	The handlerInput function is used to store the username and password entered by the user.\
\
5, Class Header\
	The handlerChange function is used to change the search category.\
	The handlerInput function is used to receive the contents of the input box.\
	The logOut function is used to logOut page, connect the back-end \ul http://localhost:3001/signout.\ulnone \
	The getUserInfo function is used to extract basic user information (including cookies) from the database, corresponding to the back-end \ul interface/getsessionInfo\ulnone .\
	The toCart function is used to navigate to the shopping cart.\
	The search function is used to receive the search content.\
\
6, Class Cart\
	GetDataList function is used to display the car shopping goods, corresponding to the backend interface at \ul http://localhost3001/loadcart\ulnone .\
	HandlerChange function is used to handle shopping goods inside the car, increase or decrease the corresponding interface '\ul http://localhost3001/deletefromcart/' + id\ulnone .\
	Checkout function used for clearing the car shopping goods, corresponding interface \ul 'http://localhost3001/checkout\'a1\'a6\ulnone .\
	\
7\'a1\'41Class Finish\
	Payment completion interface\

\f1 \
\cf2 \cb3 \expnd0\expndtw0\kerning0
\
\
}